
$main-width: 100%;
$color-primary: #3ABAED;
$color-secondary: #B3B3B3;


.floating-form {
  width: $main-width;

  > .label { 
    position: relative;
    width: $main-width;
  }

  > .span {
    color: $color-secondary;
    font-size: 13px;
    float: right;
    padding-right: 10px;
  }

}

.dropdown-label {
  color: $color-secondary; 
  font-size: 14px;
  font-weight: normal;
  position: absolute;
  pointer-events: none;
  left: 10px;
  bottom: 0px;
  transition: all 0.2s ease 0.1s;
  -moz-transition: all 0.2s ease 1s; 
  -webkit-transition: all 0.2s ease 0.1s;
}

.floating-select {
  font-size: 14px;
  padding-left: 10px;
  padding-top: 20px;
  width: $main-width;
  height: 52px;
  background-color: transparent;
  border: none;
  border-bottom: 1px solid $color-secondary;
  background-image: url(../../../assets/images/arrow-down.svg);
  background-repeat: no-repeat;
  background-position-x: calc(100% - 5px);
  background-position-y: calc(100% - 5px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  transition: all 0.2s ease 0.1s;
  -moz-transition: all 0.2s ease 1s; 
  -webkit-transition: all 0.2s ease 0.1s;

  &:focus {
    outline: none;
    border-bottom: 2px solid $color-primary; 
    background-image: url(../../../assets/images/arrow-down-blue.svg);
  }

  &:focus + label, &:not([value=""]) + label {
    bottom: 20px;
    font-size: 14px;
    color: $color-primary;
  }

  &:not(:focus) + label {
    color: $color-secondary;
  }
    
  &:not(:focus).floating-select:not([value=""]) {
    border: 1px solid $color-secondary;
    border-radius: 2px;
  }

  &:disabled, &:disabled.floating-select:not([value=""]) {
    border: none;
    border-radius: 2px;
    background-color: #eeeeee;
  }
}


/*-------------------------------------------------------*/
/**
* ESTILOS PARA EL CAMPO DE INPUT CON PLACEHOLDER
*/
 
.field {
  font-size: 11px;
  display: flex;
  flex-flow: column-reverse;
  margin-bottom: 1em;
}
/**
* Add a transition to the label and input.
* I'm not even sure that touch-action: manipulation works on
* inputs, but hey, it's new and cool and could remove the 
* pesky delay.
*/
label, input {
  transition: all 0.2s;
  touch-action: manipulation;
}

input {
  font-size: 1.5em;
  border: 0;
  border-bottom: 1px solid #ccc;
  -webkit-appearance: none;
  border-radius: 0;
  padding: 0;
  cursor: text;
}

input:focus {
  outline: 0;
  border-bottom: 1px solid #666;
}

/**
* Translate down and scale the label up to cover the placeholder,
* when following an input (with placeholder-shown support).
* Also make sure the label is only on one row, at max 2/3rds of the
* fieldâ€”to make sure it scales properly and doesn't wrap.
*/
input:placeholder-shown + label {
  cursor: text;
  max-width: 66.66%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transform-origin: left bottom;
  transform: translate(0, 2.125rem) scale(1.5);
}
/**
* By default, the placeholder should be transparent. Also, it should 
* inherit the transition.
*/
::-webkit-input-placeholder {
  opacity: 0;
  transition: inherit;
}
/**
* Show the placeholder when the input is focused.
*/
input:focus::-webkit-input-placeholder {
  opacity: 1;
}
/**
* When the element is focused, remove the label transform.
* Also, do this when the placeholder is _not_ shown, i.e. when 
* there's something in the input at all.
*/
input:not(:placeholder-shown) + label,
input:focus + label {
  transform: translate(0, 0) scale(1);
  cursor: pointer;
  color: #3ABAED;
}

